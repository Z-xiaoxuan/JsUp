let a = {
    n: 1
}

let b = a

a.x = a = {
    n: 2
}

console.log(a.x)
console.log(b)
/*
    解析：a，b变量为对象，是引用数据类型，内存中以堆栈的形式存储
        let b = a，让a，b指向了堆内存的同一个地址
        a.x = a = {...} 两个连等号相当于 a.x = {...}, a = {...}

        a.x = {...}执行完后：a和b对象属性都发生改变
        a = {
            n: 1
            x: {
                n: 2
            }
        }

        a = {...}执行完后: a关联的堆内存地址发生改变
        a = {
            n: 2
        }

        最终打印结果
        undefined
        {
            n: 1
            x: {
                n: 2
            }
        }


*/

//基于以上代码
a.n = 1000
console.log(b.n)
console.log(b.x.n)

/*
    解析：
        a.n = 1000 执行完以后：
        a = {
            n: 1000
        }

        b.n 还是原来的值1
        b.x.n 因为 x 属性实际上是引用a关联的对象的，所以a改了，这里的值也要改成1000
*/